name: 0_append_artifact_url

on:
  # artifactのURLはJob実行中には取得できないため、workflow_runのcompletedイベントを利用する
  workflow_run:
    workflows:
      - "0_pr_update"
    types:
      - "completed"

jobs:
  add_comment:
    runs-on: ubuntu-latest
    steps:
      - name: 📌 Get Artifact Information
        id: get_artifact
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const eventObj = ${{ toJSON(github.event.workflow_run) }};
            if (!eventObj.pull_requests?.length) {
              // このワークフローが走る前にPRがマージされた場合、pull_requestsは空の配列となる。
              // この場合は何もしない。
              return;
            }
            core.setOutput('issue_number', eventObj.pull_requests[0].number);
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: eventObj.id
            });
            const validArtifacts = artifacts.data.artifacts.filter(artifact => artifact.expired === false);
            if (!validArtifacts.length) {
              // Artifactがない場合は何もしない。
              return;
            }
            let result = "### :gift: Semgrep Artifact\n\n";
            result += "![badge]\n";
            result += "You can download the semgrep sarif file from the link below.\n";
            result += "Please note that file only stay for around 90 days!\n\n";
            result += "| Artifact ID | Link                    |\n";
            result += "| ----------- | ----------------------- |\n";
            for (const artifact of validArtifacts.data.artifacts) {
              const downloadUrl = "${{ github.server_url }}/${{ github.repository }}/suites/" + `${eventObj.check_suite_id}/artifacts/${artifact.id}`;
              result += `| ${artifact.id} | ${downloadUrl} |\n`;
            }
            result += "\n[badge]: https://img.shields.io/badge/Build-Success!-3fb950?logo=github&style=for-the-badge\n";
            return result;

      - name: 🔎 Find Comment
        uses: peter-evans/find-comment@v2
        id: find_comment
        if: ${{ steps.get_artifact.outputs.result != '' }}
        with:
          issue-number: ${{ steps.get_artifact.outputs.issue_number }}
          comment-author: "github-actions[bot]"
          body-includes: "Semgrep Analysis"
          direction: last

      - name: 🦜 Update Comment
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ steps.find_comment.outputs.comment-id != '' }}
        with:
          issue-number: ${{ steps.get_artifact.outputs.issue_number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: ${{ steps.get_artifact.outputs.result }}
