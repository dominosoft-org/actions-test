name: 0_pr_update

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - synchronize
    # pathsによるfilterは、dorny/paths-filterで行う

jobs:
  # プルリクエストの更新時に、変更されたファイルを解析し、走らせるワークフローを選択する。
  changes:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    outputs:
      back_common: ${{ steps.filters.outputs.back_common }}
      back_csproj: ${{ steps.filters.outputs.back_csproj }}
      front: ${{ steps.filters.outputs.front }}
      front_pnpm: ${{ steps.filters.outputs.front_pnpm }}
    steps:
      - name: 💼 Checkout
        uses: actions/checkout@v4
      - name: 🚩 Filter changes
        uses: dorny/paths-filter@v2
        id: filters
        with:
          filters: |
            back_common:
              - 'backend/NeuroFramework.Common/**'
            back_csproj:
              - 'backend/NeuroFramework.Common/**/*.csproj'
            front:
              - 'frontend/**'
            front_pnpm:
              - 'frontend/**/pnpm-lock.yaml'

  back_common:
    needs: changes
    if: ${{ github.event_name == 'workflow_dispatch' || needs.changes.outputs.back_common == 'true' }}
    uses: ./.github/workflows/1_back_common.yaml
    secrets:
      REPO_ACCOUNT: ${{ secrets.REPO_ACCOUNT }}
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  back_csproj:
    needs: changes
    if: ${{ github.event_name == 'workflow_dispatch' || needs.changes.outputs.back_csproj == 'true' }}
    uses: ./.github/workflows/1_back_csproj.yaml
    secrets:
      REPO_ACCOUNT: ${{ secrets.REPO_ACCOUNT }}
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  front:
    needs: changes
    if: ${{ github.event_name == 'workflow_dispatch' || needs.changes.outputs.front == 'true' }}
    uses: ./.github/workflows/1_front.yaml
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  front_pnpm:
    needs: changes
    if: ${{ github.event_name == 'workflow_dispatch' || needs.changes.outputs.front_pnpm == 'true' }}
    uses: ./.github/workflows/1_front_pnpm.yaml

  create_comment:
    if: ${{ always() && github.event_name == 'pull_request' }}
    needs: [back_common, back_csproj, front, front_pnpm]
    runs-on: ubuntu-latest
    outputs:
      comment: ${{ steps.create_comment.outputs.result }}
    steps:
      - name: 🖊️ Create Comment
        id: create_comment
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const job_comments = [
              `${{ needs.back_csproj.outputs.comment }}`,
              `${{ needs.back_common.outputs.comment }}`,
              `${{ needs.front.outputs.comment }}`,
              `${{ needs.front_pnpm.outputs.comment }}`
            ];
            return job_comments.filter(e => e.length > 0).join('\n\n');

  post_comment:
    needs: create_comment
    if: ${{ always() && needs.create_comment.outputs.comment != '' }}
    uses: ./.github/workflows/2_post_comment.yaml
    with:
      title: ":octocat: Code Summary"
      comment: "${{ needs.create_comment.outputs.comment }}"
