name: 1_back_common

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_ACCOUNT:
        required: true
      REPO_ACCESS_TOKEN:
        required: true
    outputs:
      comment:
        value: ${{ jobs.create_comment.outputs.comment }}

jobs:
  back_semgrep:
    name: Backend Semgrep
    uses: ./.github/workflows/2_back_semgrep.yaml

  code_analysis:
    name: Code Analysis
    uses: ./.github/workflows/2_code_analysis.yaml
    secrets:
      REPO_ACCOUNT: ${{ secrets.REPO_ACCOUNT }}
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  unit_test:
    name: Unit Test
    uses: ./.github/workflows/2_unit_test.yaml
    secrets:
      REPO_ACCOUNT: ${{ secrets.REPO_ACCOUNT }}
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  create_comment:
    if: always()
    needs: [back_semgrep, code_analysis, unit_test]
    runs-on: ubuntu-latest
    outputs:
      comment: ${{ steps.comment.outputs.result }}
    steps:
      - name: Create comment
        uses: actions/github-script@v7
        id: comment
        with:
          script: |
            const comments = [
              ${{ needs.back_semgrep.outputs.comment }},
              ${{ needs.code_analysis.outputs.comment }},
              ${{ needs.unit_test.outputs.comment }}
            ]
            return comments.filter(e => e.length > 0).join('\n\n');
