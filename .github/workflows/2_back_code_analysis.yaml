name: 2_back_code_analysis

on:
  workflow_call:
    secrets:
      REPO_ACCOUNT:
        required: true
      REPO_ACCESS_TOKEN:
        required: true
    inputs:
      solution_directory:
        description: 'sln„Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åô„Çã„Éï„Ç©„É´„ÉÄ„Éº„Å∏„ÅÆ„Éë„ÇπÔºàworkspace„Éë„Çπ„Åã„Çâ„ÅÆÁõ∏ÂØæ„Éë„Çπ„ÄÅÊú´Â∞æ„ÅØ„Çπ„É©„ÉÉ„Ç∑„É•„Åß„ÅÇ„Çã„Åì„Å®„ÄÇÔºâ'
        type: string
        required: true
      solution_filename:
        description: 'sln„Éï„Ç°„Ç§„É´ÂêçÔºàÊã°ÂºµÂ≠êÂê´„ÇÄÔºâ'
        type: string
        required: true
    outputs:
      comment:
        value: ${{ jobs.code_analysis.outputs.comment }}
env:
  GITHUB_ACCOUNT: ${{ secrets.REPO_ACCOUNT }}
  GITHUB_PKG_NFW_AUTH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

jobs:
  code_analysis:
    runs-on: ubuntu-latest
    outputs:
      comment: ${{ steps.comment.outputs.result }}

    steps:
      - name: üíº Checkout
        uses: actions/checkout@v4

      - name: ‚ö° Setup Nuget Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: üñ•Ô∏è Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: üïµÔ∏è Code Analysis
        id: code_analysis
        run: |
          cd .${{ inputs.solution_directory }}
          dotnet sln ${{ inputs.solution_filename }} remove tests/**/*.csproj
          dotnet restore --configfile "github-actions-nuget.config"
          dotnet build -m --no-restore -p:Configuration=Release -p:EnforceCodeStyleInBuild=true -p:TreatWarningsAsErrors=true -p:IsGithubActions=true > CodeAnalysis.log

      - name: üñäÔ∏è Create Comment
        id: comment
        if: always()
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { readFileSync } = require('fs');
            let contents = readFileSync('.${{ inputs.solution_directory }}CodeAnalysis.log').toString();
            contents = contents.replace("${{ github.workspace }}${{ inputs.solution_directory }}", "");
            contents = contents.replace("src/", "");
            contents = contents.match(/FAILED[\s\S]*Error/g);
            if (contents) {
              contents = contents.replace(/\n/g, '\\n');
            }else {
              contents = "- :ok_woman: Code Analysis passed";
            }
            return "### :information_desk_person: Code Analysis\\n\\n" + contents + "\\n\\n";
