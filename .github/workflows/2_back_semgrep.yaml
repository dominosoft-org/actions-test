name: 2_backend_semgrep

on:
  workflow_call:
    outputs:
      comment:
        value: ${{ jobs.create_comment.outputs.comment }}

jobs:
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout🛎️
        uses: actions/checkout@v4
      - name: Create Command
        id: create-command
        run: |
          config=$(cat ./devtools/semgrep/semgrep-backend.config|tr '\n' ' '|sed -e 's/ $/\n/g')
          semgrep_command_args=$(echo "scan $config ./backend/NeuroFramework.Common/src --sarif --output ./backend/backend.sarif")
          echo "$semgrep_command_args"
          echo "args=$(echo $semgrep_command_args)" >> "$GITHUB_OUTPUT"
      - name: Scan🌈
        id: scan
        uses: docker://returntocorp/semgrep
        with:
          entrypoint: "semgrep"
          args: ${{ steps.create-command.outputs.args }}
      - name: Upload Report📑
        uses: actions/upload-artifact@v3
        with:
          name: semgrep backend report
          path: |
            ./backend/backend.sarif
            ./devtools/semgrep/semgrep-rule-info-generation.sh
            ./devtools/semgrep/semgrep-report-generation.sh

  analyze_result:
    name: Analyze Semgrep Result
    needs: semgrep
    uses: ./.github/workflows/2_semgrep_analyze.yaml
    with:
      location: backend
      descriptionKey: .shortDescription.text

  create_comment:
    uses: ./.github/workflows/2_semgrep_create_comment.yaml
    needs: analyze_result
    with:
      length: ${{ needs.analyze_result.outputs.length }}
      location: ${{ needs.analyze_result.outputs.location }}
      findings: ${{ needs.analyze_result.outputs.findings }}
      message: ${{ needs.analyze_result.outputs.message }}

  judge-reject:
    needs: analyze_result
    if: needs.analyze_result.outputs.reject > 0
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
