name: code analysis

on:
  workflow_call:
    secrets:
      REPO_ACCOUNT:
        required: true
      REPO_ACCESS_TOKEN:
        required: true
    outputs:
      comment:
        value: ${{ jobs.code-analysis.outputs.comment }}
env:
  GITHUB_ACCOUNT: ${{ secrets.REPO_ACCOUNT }}
  GITHUB_PKG_NFW_AUTH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    outputs:
      comment: ${{ steps.comment.outputs.result }}

    steps:
      - name: Checkout🛎️
        uses: actions/checkout@v4
      - name: Setup Nuget cache⚡
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET⚡
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Code Analysis
        id: code_analysis
        run: |
          cd ./backend/NeuroFramework.Common/
          dotnet sln Common.sln remove tests/**/*.csproj
          dotnet restore --configfile "github-actions-nuget.config"
          dotnet build -m --no-restore -p:Configuration=Release -p:EnforceCodeStyleInBuild=true -p:TreatWarningsAsErrors=true -p:IsGithubActions=true > CodeAnalysis.log

      - name: Create Comment
        id: comment
        if: always()
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { readFileSync } = require('fs');
            let data = readFileSync('./backend/NeuroFramework.Common/CodeAnalysis.log');
            data = data.replace("/home/runner/work/neuro-framework-common/neuro-framework-common/backend/NeuroFramework.Common/", "");
            data = data.replace("src/", "");
            data = data.match(/FAILED[\s\S]*Error/g);
            if (data) {
              data = data.replace(/\n/g, '\\n');
            }else {
              data = "✅Code Analysis passed";
            }
            return "### Code Analysis\\n\\n" + data + "\\n\\n";
