name: 2_front_license

on:
  workflow_call:
    outputs:
      comment:
        value: ${{ jobs.check.outputs.comment }}

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      comment: ${{ steps.create_comment.outputs.comment }}
    steps:
      - name: 💼 Checkout
        uses: actions/checkout@v4

      - name: 🖥️ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 🖥️ Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-setup
        with:
          version: latest
          run_install: false

      - name: 💾 Get pnpm Store Directory
        id: pnpm_cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: ⚡ Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm_cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./frontend/**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install Dependencies
        run: |
          # Globalにlicense-checker-rseidelsohnをインストール
          pnpm install -g license-checker-rseidelsohn
          # 下記コマンドで、directoriesには./frontend/以下のディレクトリのフルパスが格納される
          directories=($(ls -d ./frontend/*/ | xargs -n1 readlink -f))
          for i in "${!directories[@]}"; do
            cd ${directories[$i]}
            pnpm install
          done

      - name: 👀 Check License
        run: |
          # ライセンスOKのリストを取得し、カンマ区切りの文字列に変換する
          excludeLicenses=$(cat ./license-whitelist.json | jq -r '.excludeLicenses | join(",")')
          # ライセンスOKのパッケージ名（先頭からの部分一致で使用する）を取得し、カンマ区切りの文字列に変換する
          excludePackages=$(cat ./license-whitelist.json | jq -r '.excludePackages | join(",")')
          directories=($(ls -d ./frontend/*/ | xargs -n1 readlink -f))
          for i in "${!directories[@]}"; do
            cd ${directories[$i]}
            license-checker-rseidelsohn --production --csv --excludeLicenses "${excludeLicenses}" --excludePackagesStartingWith "${excludePackages}" --out ./lc.csv
            # ヘッダーは不要なので1行目を削除しておく
            sed -e '1d' -i ./lc.csv
          done

      - name: 🖊️ Create Comment
        id: create_comment
        run: |
          # すべてのlc.csvの結果から重複を排除した配列を取得する。
          lines=$(sort -u -s ./frontend/*/lc.csv)
          result="### 📄Frontend License Check\n\n"
          if [ -z "$lines" ]; then
            # すべてのライセンスがOKの場合
            result+="✅All OK."
          else
            # ライセンスNGがある場合
            log="🤷Is it safe to use these libraries? Reviewers must judge that.\n\n"
            log+=$(echo "- ${lines}" | sed -n '/,/,$p')
            log="${log//$'\n'/\\n}"
            result+="$log"
          fi
          echo "comment=${result}" >> "$GITHUB_OUTPUT"
