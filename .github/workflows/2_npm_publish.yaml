name: 2_npm_publish

on:
  workflow_call:
    inputs:
      frontend_dir_name:
        required: true
        type: string
    secrets:
      OWNER_ACCESS_TOKEN:
        required: true

env:
  GITHUB_ACCOUNT: ${{ github.repository_owner }}
  GITHUB_PKG_NFW_AUTH_TOKEN: ${{ secrets.OWNER_ACCESS_TOKEN }}

jobs:
  version_increment:
    uses: ./.github/workflows/2_version_increment.yaml
    with:
      version_fragment: alpha
      prefix: frontend-${{ inputs.frontend_dir_name }}-

  publish:
    runs-on: ubuntu-latest
    needs: version_increment
    defaults:
      run:
        working-directory: ./frontend/${{ inputs.frontend_dir_name }}

    steps:
      - name: 💼 Checkout
        uses: actions/checkout@v4

      - name: 🖥️ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"

      - name: 🖥️ Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-setup
        with:
          version: latest
          run_install: false

      - name: 💾 Get pnpm Store Directory
        id: pnpm_cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: ⚡ Setup pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm_cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./frontend/**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install Dependencies
        run: pnpm i

      - name: ⚒️ Build
        run: |
          npm version ${{ needs.version_increment.outputs.next }}
          pnpm run build

      - name: 🎁 Publish
        run: |
          cp .npmrc.sample .npmrc
          pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.OWNER_ACCESS_TOKEN }}
